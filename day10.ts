type Open = '[' | '(' | '<' | '{';
type Close = ']' | ')' | '>' | '}';

type Line = {stack: Open[]} | {error: Close; stack: Open[]};

type ParseLine<T, Stack extends Open[] = []> =
    T extends `[${infer R}` ? ParseLine<R, ['[', ...Stack]>
  : T extends `(${infer R}` ? ParseLine<R, ['(', ...Stack]>
  : T extends `<${infer R}` ? ParseLine<R, ['<', ...Stack]>
  : T extends `{${infer R}` ? ParseLine<R, ['{', ...Stack]>
  : T extends `]${infer R}` ? Stack extends ['[', ...(infer RS)]
    ? RS extends Open[] ? ParseLine<R, RS> : never : {error: ']'; stack: Stack}
  : T extends `)${infer R}` ? Stack extends ['(', ...(infer RS)]
    ? RS extends Open[] ? ParseLine<R, RS> : never : {error: ')'; stack: Stack}
  : T extends `>${infer R}` ? Stack extends ['<', ...(infer RS)]
    ? RS extends Open[] ? ParseLine<R, RS> : never : {error: '>'; stack: Stack}
  : T extends `}${infer R}` ? Stack extends ['{', ...(infer RS)]
    ? RS extends Open[] ? ParseLine<R, RS> : never : {error: '}'; stack: Stack}
  : {stack: Stack};

type ParseInput<I, ParsedLines extends any[] = []> =
  I extends `${infer L}\n${infer R}` ? ParseInput<R, [ParseLine<L>, ...ParsedLines]> : ParsedLines;

type ErrorScore<T extends Close> = {
  ")": 3;
  "]": 57;
  "}": 1197;
  ">": 25137;
}[T]

type CompletionScore<T extends Close> = {
  ")": 1;
  "]": 2;
  "}": 3;
  ">": 4;
}[T]

type Lines = ParseInput<Input>;

type Part1<Lines extends Line[], Solution extends string = "0"> =
  Lines extends [{error: infer E}, ...(infer R)] ? Part1<R, `${ErrorScore<E>}+${Solution}`> : Solution;

type Answer1 = Part1<Input>;

const value1: Answer1 = "3+3+0+25137+0+0+25137+0+0+1197+0+0+0+25137+0+0+1197+1197+0+1197+1197+57+0+57+25137+57+0+25137+0+3+1197+3+0+25137+0+25137+3+25137+0+0+3+0+0+0+3+0+3+1197+25137+0+0+3+0+25137+1197+25137+0+0+0+57+0+1197+3+25137+1197+0+0+0+0+0+0+25137+0+1197+57+1197+0+0+0+57+57+0+1197+25137+0+0+0+0+1197+0+0";

console.log(`Part 1: ${eval(value1)}`)

// <--- Last few GCs --->
// 84[8232:0x32dee10]    37015 ms: Mark-sweep (reduce) 2047.2 (2083.6) -> 2046.8 (2083.6) MB, 3235.1 / 0.0 ms  (+ 50.5 ms in 12 steps since start of marking, biggest step 6.0 ms, walltime since start of marking 3294 ms) (average mu = 0.131, current mu = 0.067)[8232:0x32dee10]    40495 ms: Mark-sweep (reduce) 2047.9 (2083.6) -> 2047.4 (2084.4) MB, 3160.5 / 0.0 ms  (+ 65.3 ms in 13 steps since start of marking, biggest step 6.3 ms, walltime since start of marking 3237 ms) (average mu = 0.103, current mu = 0.073)

// <--- JS stacktrace --->

// FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
//  1: 0xa55e88 node::Abort() [node]
//  2: 0x94dab0  [node]
//  3: 0xc60732 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]
//  4: 0xc609ee v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]
//  5: 0xe1eb85  [node]
//  6: 0xe344e2  [node]
//  7: 0xe365b4 v8::internal::Heap::AllocateRawWithLightRetrySlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node]
//  8: 0xe36624 v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node]
//  9: 0xdf6eba v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationType, v8::internal::AllocationOrigin) [node]
// 10: 0x118e2eb v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [node]
// 11: 0x1584699  [node]


// Type level number operations mostly copied from
// https://itnext.io/implementing-arithmetic-within-typescripts-type-system-a1ef140a6f6f
// and
// https://dev.to/susisu/how-to-create-deep-recursive-types-5fgg

type Recurse<T> =
  T extends { __rec: unknown }
    ? Recurse<_Recurse<T>>
    : T;
type _Recurse<T> =
    T extends { __rec: never } ? never
  : T extends { __rec: { __rec: infer U } } ? { __rec: _Recurse<U> }
  : T extends { __rec: infer U } ? U
  : T;

type Length<T extends any[]> =
  T extends { length: infer L } ? L : never;

type BuildTuple<L extends number, T extends any[] = []> = Recurse<_BuildTuple<L, T>>;
type _BuildTuple<L extends number, T extends any[]> =
  T extends { length: L }
    ? T
    : { __rec: _BuildTuple<L, [...T, any]> };

type Add<A extends number, B extends number> =
  Length<[...BuildTuple<A>, ...BuildTuple<B>]> extends infer Sum
  ? Sum extends number ? Sum : never : never;

type Sum<Nums extends number[]> = Recurse<_Sum<0, Nums>>;
type _Sum<Total extends number, Nums extends number[]> =
  Nums extends [infer N, ...(infer R)] ? N extends number ? R extends number[]
    ? { __rec: _Sum<Add<Total, N>, R> }
    : never : never
    : Total;

type Subtract<A extends number, B extends number> =
  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]
    ? Length<U>
    : never;

type MultiAdd<
  N extends number, A extends number, I extends number
> = I extends 0 ? A : MultiAdd<N, Add<N, A>, Subtract<I, 1>>;

type EQ<A, B> =
  A extends B ? (B extends A ? true : false) : false;

type AtTerminus<A extends number, B extends number> =
  A extends 0 ? true : (B extends 0 ? true : false);

type LT<A extends number, B extends number> =
  AtTerminus<A, B> extends true
    ? EQ<A, B> extends true
      ? false
      : (A extends 0 ? true : false)
    : LT<Subtract<A, 1>, Subtract<B, 1>>;

type MultiSub<N extends number, D extends number, Q extends number> =
  LT<N, D> extends true ? Q : MultiSub<Subtract<N, D>, D, Add<Q, 1>>;

type Multiply<A extends number, B extends number> =
  MultiAdd<A, 0, B>;

type Divide<A extends number, B extends number> =
  MultiSub<A, B, 0>;

type Modulo<A extends number, B extends number> =
  LT<A, B> extends true ? A : Modulo<Subtract<A, B>, B>;

type IsPositive<N extends number> =
  `${N}` extends `-${number}` ? false : true;

type IsWhole<N extends number> =
  `${N}` extends `${number}.${number}` ? false : true;

type Input = `[{(<<{(([<<{<<[]()>[<>[]]>[[<>[]]{{}{}}]}<<[<>()][{}]><[<>{}]<<>()>>>>([<([]<>)([][])>(<<>[]>([]()))]<[
{([[[{{([{{{([[]()][()<>])}[<<(){}><<>()>>{{[]<>}[(){}]}]}<<(<<>[]>{[][]}){<<>()>({}()}}><{
{[[([{([<(<{{[{}{}]<[]()>}(<<>[]><<>()>)}(<[<><>](<>[])><<(){}>{(){}}>)>{{[({}[]){[][]}]({()<>}<[]<>>)}})>({(
{[<([(<<{<<<[<{}{}>({}[])][<[]{}>{[]{}}]>{[{[][]}[{}<>]]{(<><>){{}[]}}}>([<[<>{}]([][])>{(<>{})}][{({
<{{[{[<(<[{[(<()<>>([][]))[[{}()]]]}<{<{{}{}}((){})>((()())([]{}))}<((<>{}))>>]<{[[<()[]>]{(<>[])
<((({<((<([<[<[][]>[[]{}]]<{[][]}({})>>{<<()>({}())>[(<>)<[]()>]}]{[{<<>[]>{{}<>}}<<()<>>([][])>]})[({{((
[{<[{<({({[(<{{}[]}[[]()]>{<()()><{}()>})({[{}<>](()())}({[]{}}({}{}))>]([[[<>[]]<()[]>]]([[<><>]({}
{(<[<<{([([(<[{}[]]<{}{}>><<()[]>([]<>}>)]{[[{()}({}())]<[<>[]]([]<>)>](<[[]{}](<><>)><[[]{}]{<>[]}>)})]
({([{[({{<([[([]())]{[[]{}]}]{<{(){}}<{}{}>><([]{})>})[(<{<>()}>{(<><>)[[]{}]}){{{{}<>}({}<>)}[<()
<[<[{((<<{[((<[]<>>[[]()]){{()[]](<>)})(({[][]}[[][]])[(<><>)<{}>])][<[{[]()}{[]()}][{<>{}}({}<>)
<({(<(<{[[({({()[]}<{}<>>)[<{}[]>{{}()}]}([[{}](()[])][{[]{}}(()[])])]{[[{()[]}]<[[][]][{}]>]}]<(<<<[]()>[
[<<<{((<{(<([[{}{}]{()<>}]{{{}<>}[<>()]}){[[[]()][[][]]]{([]())[()<>]}}>{({[<>()]}([[][]]<(){}>))<<<{}<
[[{(([(<{(<({[()()]([]{})}[({}<>)])([<[]{}><()<>>][<<>[]><<><>>])>)[[{[{()[]}{[]}]}]]}>)]{<{{(<[{[[]<>]<()[]>
<{(<[{{([{{[(<[]<>><()<>>){{{}{}}}]}(([[<><>]([][])]<{()}{{}()}>)<{[()<>][<>]}<(<>[])>>)}])
(<{({([<([<{<(<>()){()()}>([<>()]({}()))}><(([{}{}]{<>{}})<<[]()><[]{}>})<{([]<>)<[]()>}({{
[{([(({[(<[[{{{}<>}({}())}{{(){}}<<>>}]<<({}())(<><>)]<<<><>><()()>>>]({(<{}<>>{()[]})}<<{{}{}}({})><<<>(
(<[(({<(<{({{<()<>>{{}()}}}[[{()[]}{[]{}}]<({}())([]{})>])}{<{<(()[])([]<>)><<<>{}><{}[]>>}<[[<><>](()[]}]>>{
({({<({({(<{({{}{}}(()[]))(<{}{}>[{}()])}((<{}<>><()[]>)[(()<>)[{}<>]])>)}[[<<{<[]{}>{<>[]}}{{(){
({<<([(<<<(<{(()())[{}[]]}(<[]<>>[{}{}])>)<(<[{}[]]{[]{}}>({[][]}[[][]])>>><[{([[]()]{{}()
[({{[[(({[<[([{}[]])<<(){}>(()<>)>]({<[][]>[{}<>]}[<[]<>>])>({(<<>[]>{{}{}}){<[]{}><{}<>>}}([({}<
((<[[{({<<<([({}{})[[]<>]]{(()<>)[[]{}]})({{<>}[<>[]]}[[<>[]]<[][]>])>>>}[[<<{(<<>()>(()()))<{<>{}}(()
{{{[[[([{<(<[([]())[[]()]]<(()())([]{})>>([<[][]>]{({}()){()<>}}))><[([[<>[]][[]<>]][<()[]><{}{
[<{[(<<{({<({{()[]}[{}<>]}{({}<>)[(){}]})[<([]{})><([]<>){()()}>]>})}>[[<{[<<[<>()]<()<>>>{[{}{}]<<>[]>
<((((((<{(<([[<><>][<>[]]]{<{}<>>})>)(([<[()()]>[(<>[])<[]{}>]][<([]{})([]{})>{{[]}({}())}]){[[[()[
<([{((({{[({[[()]][{[]}{<>[]}]}<{<(){}>[[][]]}<([]())<[][]>>>)<<{<()()>({}())}{<()()>}>{{[{}()]}}>]}
<[({<[(<<<<{[[<>{}]([]{})]}>>>[<[[{(<>())([][]}}(<[]<>>)]<<{<>()}{[]<>}>{<()>([]())}>]<<[({}{})<[
[[([({<({{(<(<()()>(()<>))>[{<<>()>([]<>)}{{<><>}{{}[]>}]){([[[]()]<[]<>>](([]())<[][]>))}}}{<{<{<<>()
<<{[[<(({(({<{[][]}(<>{})>{(<>())}}{<[[]<>]<{}()>){{[]<>}[()]}}))}))>]]{{<<{{<<<{([][])<{}()>}[[<>()][()[]
{<{[[(<[((([<{[][]}[{}]>]((([][])([]()))([<><>](<>{}))))){(<[[(){}]<[][]>]>{((()()}({}[]))<[<>{}]{<><>}>
([[[[[([<{({{<[]<>><{}<>>}{{<>()}[[]<>]}}(<[<><>]{()()}>))<[{({}<>){(){}}}<({}())[()[]]>]{([()<>][[][]
({([(({<<{{[(({}[])([][]))[({}{})]]}([<<[]<>>([]{})>])]>>[{[[(<<()()><<>{}>>)(([[][]](<>[]))
{({[<({[({[([[(){}]{(){}}])]<{<<(){}>[{}[]]><{[]{}}[[]<>]>}{{{<>{}}[[][]]}[[[]<>]]}>}([{((<>[])<[][]>)}]
({([<(((({<[<<[]<>>{{}[]}>((<>{})<[]{}>)]>{(<{{}[]}({}{})><<()<>>(<>[])>)[{(())([]())}]}})))[{<(({{{[]{}}[<
<<([{{[[<<(<[{[][]}<{}{}>]<[{}{}]<<>{}>>><[[{}{}][{}]]<<{}<>>[{}()]>>)(<[(<>{})<()[]>]{(()())}><[[[]]<{}>][(<
{[[([<({[{[<[([]<>)<[]{}>][(<>())[[]<>]]>[([<>[]](<>))([()()]({}()))]]{{(<()[]>{{}[]>)[{<>}(()())]}}}{<{{
([[[(([{{<[{<[<>[]]<<>[]>><(()())<{}[]>>}(([[][]]<{}<>>))]<[[(<><>}{()()}][[{}[]][()[]]]](([{}{}]<[][]>)<[{}
{({{(<([[{({{<[]{}>[[][]]}{{<>()}<[]{}>}})({({[]})[<()()>{[]<>}]})}<{[[<{}>({}())]{{[][]}<[]()>>]([{(){
{([((<<{[{{[<({}())[()[]]>(<{}<>>({}()))]}}<{<([[][]]([]{})){(<>[]){()[]}}><[({})[<>[]]][(
{(((<[([({(([{<>}<[]{}>]))}({{([<>{}](<>{})){(<>{}){[]{}}}}[[[<>[]]]<{()<>}{<><>})]}({({[][]}<[]{}>)[{[]{}}]}
[{(({<[{(([{<[()[]]<[][]>>([{}<>][()()])}([<<>[]>[[]{}]][<{}[]>({}())])]<({({}[])}[{()()}[{}[]
[[{{<<<[[{<<[<[]{}><()[]>]{[[][]]{<><>}}>>{({[[]{}][<><>]}(([]<>)<<>()>))(([{}<>]<[][]>)<([]<>)((
[{{(({[(({[[<[(){}]>(<{}<>>)]<(([]<>)<<>()>)[<[]{}>{<>()}]>]({<[[]{}]{<><>>>}<([<>()][[]<>]
[{<<{{(((<[[{(<>{}){[]<>}}((()[])[()<>])]<[[()]](<<>[]>[(){}])>](<({{}[]}<()<>>}<[[][]]<{}<>
<[(<{[[[{[{[[[[]<>)({}())]([()()][(){}])][<{[]()}[(){}]>[[(){}](<>())]]}<[{[()<>]{[]<>}}{<()()>}](
{[<<[{{([{<[([{}()]([][]))<([]())<<><>>>]<(([]<>)[{}]){<{}()>({}<>)}>>{<<<<><>>(()[])><{{}{}}<[][]>>>{([{}[
((({[<<<(<[<<{<>{}})[<{}<>>]>{[({}<>){[]}](([]<>)<(){}>)}]>{{<{<{}{}>[[]{}]}({[][]}<()[]>)><{{()}{{}}}[{{}{}}
{(([{[({[([[<([][])(()<>)>(<(){}>[<>[]])]<{[<>[]]({}[])}(<[]{}>{{}{}})>])<<({[()[]]((){})}{{{}{
([(<{(<<((([<{[]}>[[[][]](<><>)]][<([]){<>{}}>{[<>{}]}])(<[{<>{}}({}<>)]([()[]]([]<>))>))<{<([()
<<{{({<{{{<<({(){}}<[]{}>)><([(){}]({}[]))[[{}()]({}())]>>{<<[{}[]]{()<>}><[[]<>][()<>]>>[{
[[[{{{[{[(<(([()[]]<(){}>))[(([][])[<>])<([][]){<>()}>]>{[<<()[]><{}[]>>((<>)[(){}]))})(<<[{()()}<()
<{[{((<({<<[<<{}()>[(){}]>[(()()){<>()}]](<[{}<>][{}()]>{<(){}>})>>[<<[<(){}>[<>{}]]>((<()()>{<>
{((<[<([(({[<<{}<>>{<><>}>[<()()><{}[]>]][{[[][]]{()()}}[[<>]{{}()}]]}<(<(<>{})<()<>>>{{()
{(<[(<([{<<<({{}()}({}<>))[<[]><[]<>>]>{<<{}<>>[[]()>>}>[{<<{}()>[[]{}]>}{{{()<>}}}]>}]){(<[({<<<><>><[][]>>}
<[<[(([{<[<{[{[][]}{<>[]}])>][([[[[]{}][{}<>]][[{}{}]]]){(({<>[]}[<>[]]){{[]{}}{()()}})<(<[]<>><[][]>)>}]>}[
{(<[[[(<([[{{[()[]]{<>()}}{<[]{}>{<>[]}}}(<([]<>)([]())><<()[]>(<>{})>)]]([<([<>](())>{{<><>}<(){}>}>][<(
<<[([[{<[[[[{([]())<<>[]>}]({{{}{}}({}[])}<{()[]}<()<>>>)]{{<({}())[<>[]]><{<>}(()<>)>}([({}{})[<>]
{([({[(({{<[[{{}()>[<>]]({<>[]}(()()))]([[()<>]([]())]{[()[]](<><>)})>{[<<()()><(){}>>[[()()][
{[[{<{([(([[{({}[]){()()}}{(<>{})[[]<>]}]<[[{}<>]<[][]>]((()[]))>])){(<<([[]{}]([]{})){<{}<>><()()>}>{<{[]
<{({(({{{([<{[()[]]<()<>>}{({}())[{}{}]}><(([]())<<>[]>)<{[]()}[(){}]>>)({(<()>)([{}{}][()<>])}[<[[]<>][()()]
[{{(((([{[{(<(<>())([]{})>[([][])({}[])])<{<(){}>[[][]]}[<[]()>{[][]}]>}((<([]()}{[]{}}>){<({})><{(){}}>})
{(<{<((((<(<<<[]<>>(<>())>{[{}[])<[]{}>}>)><[[([{}<>]{{}<>})<{()()}{<>{}}>]{[<()()>{()[]}][[<
{(<<[<((<<<<{{<>{}}{<>{}}}[(()())<<>()>]>[[([]())<{}()>]((<><>)<<>[]>)]>{([<()()>[{}]]{[<>[]]<<>()>})<<({}<
<{[{(((<({<<((()<>){[][]})[{[]<>}[[]<>]]>>})>))[<{{{[<{[{}{}]<[]()>}<{()[]>>>[<<{}{}>{<><>}>[[<>{}][{}<
[[{<{<[[<{(([<[]<>>{[]()}]){[<[]<>>[{}]](<(){}>[[][]])})}>]][[<(<<[[[][]][[]()]]<[[]<>]>>>{[({{}()}<{}<>>)]<(
{{((([<((<<[[{()}(()[])]][([(){}]<[]<>>)]>(([[{}()][()[]]](((){}){(){}}])({[<><>]<{}{}>}(([][])<<>{}>)))>)((
<{([[(<{[<[[[([]())<<>()>][<{}{}>{{}{}}>]{[({}{})({}<>)][(<>{})<{}()>]}]([{{{}()}{[][]}}])>([
<[<{{<<{{[[(([(){}]({}[]])({<><>}<[]{}>))]{<(({}())){<[][]>}>{{({}<>)[[]<>]}(<<>[]>[[]<>])}}]}}>>[{
(<<<{({[[[[<{(<><>){()()}}>{[<<>{}>([]{})][[{}<>][[]{}]]}]<{((<>{})[()<>])(({}()){{}()})}>]]{{({[((){})](<[]
<[{<{{[<[{{([(<>())[(){}]]<[<>()]<()<>>>)}}][<[(([()<>]({}())){(()[])<{}()>])<[(<>[])({}())]>]{((
<{{[{{([<{([((<>{})({}{}))](<({}[]){()<>}>(({}())[[]()]))){([[<>{}]{()<>}])}}<(<[<()[]><()<>>]}<({[]<
{({[[({<{{[[([()])<{()[]}{<>[]}>]]}}>[((<[<([]())({}())>]<<{<>[]}[{}<>]>>>{[[([]{})([])}{<<><>>{<>()}
<<{{<(({[<<(((<><>){{}[]})(<{}[]>))[<<[]{}>([]{})><<[]<>>>]>{{(([]()){<>{}}){{<>[]}((){})}
{<{[({{<{[(([<(){}><[]<>>})[(<()[]>({}<>))({[]{}}[[]<>])])][<{<<[]()>{{}[]}>}{(([]){{}<>}){<{}{}><{}
[[{([<[<[{<([(()<>)}[[{}{}]<[]()>])[[<()[]>]([{}{}][()<>])]>([[<<>{}>]{{[][]}[(){}]}][{[()()](<><>)}])}{<<<
[[[{[<<<<<[(([<><>])<<{}[]><{}()>>)[[<<>[]>[()[]]]{(()<>){<>{}}}]]<<({[]{}}[[]()]){(()<>)[[]{}]}>(({{}{
[[(([{{<([{[[<()()>({}[])]{<<>[]>((){})}]({{{}}<{}>}((()())({}[])))}(<[{[]}([]<>)]>{{<()<>>(<>{})}
(((({[(<{(<{<[()()][{}<>]>}{<<{}<>>[()[]]>}><<{{()[]}[[][]]}>>)}>>]{([[([({[{}()][<>{}]}){<[{}()]<{}
{[[[{{[[<<{(({[]<>}){{[][]}<<><>>})[[[(){}]<<>{}>]{<<>[]>{{}()}}]}>>]](([([{<[(){}][{}()]>{<[]<>><
<[[[{<<<{([{(<()()>)<[<>[]]({}())>}{{([]{}){{}}}[[(){}]<<>[]>]}](([<{}()>](({}[])[[]()]))<[[{}()]<{}[]>]>)
(({(({{<{{<((({}()))[<()()>[<>{}]])>}{{{[[{}<>][{}[]]]{<<><>><<>[]>}}}}}>}}[({{({[<[[]()][
((({[<{[((<[[<<>{}>}{{<>[]}}]>){{({{<>{}}}{{()()}(<>[])})({<[]()>[()()]}{<[]()>{[]{}}})}<[(<()()>{{}
([{{(<<<<[([[{{}{}}<{}<>>]<({}{}){()}>]{{{()<>}[[]{}]}[{[]<>}{<><>}]})][{[[(<><>)[{}<>]][([](
{<<<[[({<{[({(<><>)[<><>]}{[(){}]{<>[]}})]{<([<>{}]{()[]})((<>()))>}}>[[<[{<{}()>}(({}<>)[{}[]])]<{(<>[]
[({(<[[<[<({({<>[]}{(){}}){([]()>(()[])}})>[[{(<()[]>[<>()])}{[[<>()]({}[])]{(()[])<()<>>}}]]]([{{<<()[]
{[([(([[{<<<{<[]>{<><>}}{{[]}(()())}><[{<>()}[<>[]]]([<><>]([]{}))>>{(({<><>}))({{{}[]}<<>[]>}[{{}()}])}
[([<[{([<<<(<{()<>}<[]()>>{[<><>][<><>]})([{{}}]{{{}[]}(<><>)})>>(({{({}[])<[]>}[(<>())(<><
[{[{[((<[[[<([<>[]](<><>))({{}()}[()()])>]>]><[{{{((<>[])<()()>)<[()[]]>}<([{}<>]({}())){{()[]}{[]<
{{{[{([<(<<[([()<>]<()()>)(<<>()>(()[]))]<<({}<>)[{}]><<[]<>>{{}[]}>>>>)>(([(<[{()<>}{{}()}]([(
({{{[({[{[({([{}<>]([]<>)){<<>[]>}})<[<[()]<[]>>]<<{{}[])[{}{}]>>>]}(<({{[<>{}]}([(){}]{{}<>})
{[(({{{([({({(()())[<><>]}{<[][]>(()[])}){[{<>()}[()[]]]<{<>[]}[[]{}]>}}[(<{[])[<>[]]>({{}[]}[()<>]))]){{[{<{
`
